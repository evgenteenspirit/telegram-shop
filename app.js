const products = [
    {
        id: 1,
        name: "–†—É—á–∫–∞-—Å–∫–æ–±–∞ –º–∞—Ç–æ–≤–∞—è (128–º–º)",
        price: "85 ‚ÇΩ",
        category: "handles",
        image: "https://via.placeholder.com/250x250?text=–†—É—á–∫–∞+128–º–º",
        description: "–ú–∞—Ç–µ—Ä–∏–∞–ª: —Å—Ç–∞–ª—å, —Ü–≤–µ—Ç: –º–∞—Ç–æ–≤—ã–π –Ω–∏–∫–µ–ª—å"
    },
    {
        id: 2,
        name: "–†—É—á–∫–∞-–∫–Ω–æ–ø–∫–∞ –∑–æ–ª–æ—Ç–æ (16–º–º)",
        price: "45 ‚ÇΩ",
        category: "handles",
        image: "https://via.placeholder.com/250x250?text=–†—É—á–∫–∞+16–º–º",
        description: "–ú–∞—Ç–µ—Ä–∏–∞–ª: –∞–ª—é–º–∏–Ω–∏–π, —Ü–≤–µ—Ç: –∑–æ–ª–æ—Ç–æ"
    },
    {
        id: 3,
        name: "–ü–µ—Ç–ª—è —á–µ—Ç—ã—Ä–µ—Ö—à–∞—Ä–Ω–∏—Ä–Ω–∞—è (110¬∞)",
        price: "120 ‚ÇΩ",
        category: "loops",
        image: "https://via.placeholder.com/250x250?text=–ü–µ—Ç–ª—è+110¬∞",
        description: "–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –ø–æ 3 –æ—Å—è–º, –Ω–∞–∫–ª–∞–¥–Ω–∞—è"
    },
    {
        id: 4,
        name: "–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ä–æ–ª–∏–∫–æ–≤–∞—è (400–º–º)",
        price: "190 ‚ÇΩ",
        category: "guides",
        image: "https://via.placeholder.com/250x250?text=–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è",
        description: "–î–ª—è –≤—ã–¥–≤–∏–∂–Ω—ã—Ö —è—â–∏–∫–æ–≤, –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–æ 30–∫–≥"
    },
    {
        id: 5,
        name: "–í–∏–Ω—Ç –∫–æ–Ω—Ñ–∏—Ä–º–∞—Ç (6.3x50mm)",
        price: "5 ‚ÇΩ",
        category: "fasteners",
        image: "https://via.placeholder.com/250x250?text=–ö–æ–Ω—Ñ–∏—Ä–º–∞—Ç",
        description: "–£–ø–∞–∫–æ–≤–∫–∞ 100 —à—Ç., –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π"
    },
    {
        id: 6,
        name: "–£–≥–ª–æ–≤–∞—è —Å—Ç—è–∂–∫–∞",
        price: "15 ‚ÇΩ",
        category: "fasteners",
        image: "https://via.placeholder.com/250x250?text=–£–≥–ª–æ–≤–∞—è+—Å—Ç—è–∂–∫–∞",
        description: "–î–ª—è –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
    }
];

// –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä
let currentProduct = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
function displayProducts(category = 'all') {
    const container = document.getElementById('productsContainer');
    container.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

    const filteredProducts = category === 'all' 
        ? products 
        : products.filter(product => product.category === category);

    filteredProducts.forEach(product => {
        const productElement = document.createElement('div');
        productElement.className = 'product';
        productElement.dataset.category = product.category;
        
        productElement.innerHTML = `
            <img src="${product.image}" alt="${product.name}">
            <h3>${product.name}</h3>
            <p>${product.description}</p>
            <p><strong>${product.price}</strong></p>
            <button class="buy-btn" onclick="openOrderModal(${product.id})">–ö—É–ø–∏—Ç—å</button>
        `;
        
        container.appendChild(productElement);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function filterProducts(category) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    event.target.classList.add('active');
    
    displayProducts(category);
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openOrderModal(productId) {
    currentProduct = products.find(p => p.id === productId);
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram)
    if (window.Telegram && Telegram.WebApp) {
        const user = Telegram.WebApp.initDataUnsafe.user;
        if (user) {
            document.getElementById('userName').value = user.first_name || '';
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    document.getElementById('orderModal').style.display = 'block';
    document.getElementById('overlay').style.display = 'block';
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
function sendOrder() {
    const name = document.getElementById('userName').value;
    const phone = document.getElementById('userPhone').value;
    const comment = document.getElementById('userComment').value;

    if (!name || !phone) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω');
        return;
    }

    const message = `
üõí –ù–û–í–´–ô –ó–ê–ö–ê–ó –§–£–†–ù–ò–¢–£–†–´!
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
üë§ –ö–õ–ò–ï–ù–¢: ${name}
üìû –¢–ï–õ–ï–§–û–ù: ${phone}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
üì¶ –¢–û–í–ê–†: ${currentProduct.name}
üí∞ –¶–ï–ù–ê: ${currentProduct.price}
üìù –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô: ${comment || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
üåê –°–ê–ô–¢: ${window.location.href}
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥)
    sendToTelegram(message);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeOrderModal();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    alert('‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeOrderModal() {
    document.getElementById('orderModal').style.display = 'none';
    document.getElementById('overlay').style.display = 'none';
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('userName').value = '';
    document.getElementById('userPhone').value = '';
    document.getElementById('userComment').value = '';
}

// –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
    displayProducts();
    
    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('confirmOrder').addEventListener('click', sendOrder);
    document.getElementById('closeModal').addEventListener('click', closeOrderModal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ
    document.getElementById('overlay').addEventListener('click', closeOrderModal);
});

// –í–∞—à–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–æ—Å—Ç–∞–≤—å—Ç–µ –∫–∞–∫ –µ—Å—Ç—å)
async function sendToTelegram(message) {
    try {
        const response = await fetch('/api/telegram', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message }),
        });
        
        if (!response.ok) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
        }
    } catch (error) {
        console.error('Error:', error);
    }
}