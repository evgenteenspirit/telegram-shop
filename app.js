// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const productsData = [
    // –ú–µ–±–µ–ª—å–Ω—ã–µ —Ä—É—á–∫–∏
    {
        id: 1,
        name: "–†—É—á–∫–∞ –º–µ–±–µ–ª—å–Ω–∞—è '–ü—Ä–µ—Å—Ç–∏–∂' –∞–ª—é–º–∏–Ω–∏–µ–≤–∞—è",
        price: 450,
        category: "handles",
        image: "images/handles.jpg",
        description: "–ê–ª—é–º–∏–Ω–∏–µ–≤–∞—è —Ä—É—á–∫–∞ —Å –º–∞—Ç–æ–≤—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º, 128–º–º. –î–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏."
    },
    {
        id: 2,
        name: "–†—É—á–∫–∞-–∫–Ω–æ–± '–≠–ª–µ–≥–∞–Ω—Ç' —Ö—Ä–æ–º",
        price: 320,
        category: "handles",
        image: "images/handles.jpg",
        description: "–®–∞—Ä–æ–æ–±—Ä–∞–∑–Ω–∞—è —Ä—É—á–∫–∞, —Ö—Ä–æ–º –ø–æ–∫—Ä—ã—Ç–∏–µ, 32–º–º. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ."
    },
    {
        id: 3,
        name: "–†—É—á–∫–∞ –°-–æ–±—Ä–∞–∑–Ω–∞—è '–ú–æ–¥–µ—Ä–Ω'",
        price: 280,
        category: "handles",
        image: "images/handles.jpg",
        description: "–°—Ç–∞–ª—å–Ω–∞—è —Ä—É—á–∫–∞ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–±–µ–ª–∏, 96–º–º. –°—Ç–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω."
    },
    {
        id: 4,
        name: "–†—É—á–∫–∞ —Å–∫–æ–±–∞ '–ö–ª–∞—Å—Å–∏–∫–∞' –ª–∞—Ç—É–Ω—å",
        price: 390,
        category: "handles",
        image: "images/handles.jpg",
        description: "–õ–∞—Ç—É–Ω–Ω–∞—è —Ä—É—á–∫–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –º–µ–±–µ–ª–∏, 128–º–º. –ü—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ."
    },
    
    // –ú–µ–±–µ–ª—å–Ω—ã–µ –ø–µ—Ç–ª–∏
    {
        id: 5,
        name: "–ü–µ—Ç–ª—è —á–µ—Ç—ã—Ä–µ—Ö—à–∞—Ä–Ω–∏—Ä–Ω–∞—è —Å –¥–æ–≤–æ–¥—á–∏–∫–æ–º",
        price: 280,
        category: "hinges",
        image: "images/hinges.jpg",
        description: "–° –¥–æ–≤–æ–¥—á–∏–∫–æ–º, —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –ø–æ 3 –æ—Å—è–º, 110¬∞. –ù–µ–º–µ—Ü–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ."
    },
    {
        id: 6,
        name: "–ü–µ—Ç–ª—è —Å–∫—Ä—ã—Ç–∞—è INVISIBLE",
        price: 390,
        category: "hinges",
        image: "images/hinges.jpg",
        description: "–°–∫—Ä—ã—Ç–æ–µ –∫—Ä–µ–ø–ª–µ–Ω–∏–µ, –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤. –ù–µ–≤–∏–¥–∏–º—ã–π –º–æ–Ω—Ç–∞–∂."
    },
    {
        id: 7,
        name: "–ü–µ—Ç–ª—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è 95¬∞",
        price: 220,
        category: "hinges",
        image: "images/hinges.jpg",
        description: "–î–ª—è –º–µ–±–µ–ª—å–Ω—ã—Ö —Ñ–∞—Å–∞–¥–æ–≤, —É–≥–æ–ª –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è 95¬∞. –ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è."
    },
    {
        id: 8,
        name: "–ü–µ—Ç–ª—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–≤–µ—Å–∞ 175¬∞",
        price: 310,
        category: "hinges",
        image: "images/hinges.jpg",
        description: "–î–ª—è —É–≥–ª–æ–≤—ã—Ö —à–∫–∞—Ñ–æ–≤, —à–∏—Ä–æ–∫–∏–π —É–≥–æ–ª –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏—è. –° –ø–ª–∞–≤–Ω—ã–º —Ö–æ–¥–æ–º."
    },
    
    // –°–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è
    {
        id: 9,
        name: "–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è —à–∞—Ä–∏–∫–æ–≤–∞—è 400–º–º",
        price: 890,
        category: "systems",
        image: "images/drawers.jpg",
        description: "–î–ª—è –≤—ã–¥–≤–∏–∂–Ω—ã—Ö —è—â–∏–∫–æ–≤, –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–æ 50–∫–≥, 400–º–º. –ü–ª–∞–≤–Ω—ã–π —Ö–æ–¥."
    },
    {
        id: 10,
        name: "–õ–∏—Ñ—Ç –ø–æ–¥—ä–µ–º–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –≥–∞–∑–ª–∏—Ñ—Ç",
        price: 1250,
        category: "systems",
        image: "images/drawers.jpg",
        description: "–î–ª—è –≤–µ—Ä—Ö–Ω–∏—Ö —à–∫–∞—Ñ–æ–≤, –ø–ª–∞–≤–Ω–æ–µ –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏–µ. Gas-lift —Å–∏—Å—Ç–µ–º–∞."
    },
    {
        id: 11,
        name: "–ù–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ç–µ–ª–µ—Å–∫–æ–ø–∏—á–µ—Å–∫–∞—è 450–º–º",
        price: 750,
        category: "systems",
        image: "images/drawers.jpg",
        description: "–ü–æ–ª–Ω–æ–µ –≤—ã–¥–≤–∏–∂–µ–Ω–∏–µ, –Ω–∞–≥—Ä—É–∑–∫–∞ –¥–æ 35–∫–≥, 450–º–º. –¢–∏—Ö–∞—è —Ä–∞–±–æ—Ç–∞."
    },
    {
        id: 12,
        name: "–°–∏—Å—Ç–µ–º–∞ –ø–∞–Ω—Ç–æ–≥—Ä–∞—Ñ –¥–ª—è –≤–µ—Ä—Ö–Ω–∏—Ö —à–∫–∞—Ñ–æ–≤",
        price: 1850,
        category: "systems",
        image: "images/drawers.jpg",
        description: "–î–ª—è –≤–µ—Ä—Ö–Ω–∏—Ö —à–∫–∞—Ñ–æ–≤, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏–µ. –ü—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å."
    },
    
    // –ö—Ä–µ–ø–µ–∂–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è
    {
        id: 13,
        name: "–í–∏–Ω—Ç –º–µ–±–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏—Ä–º–∞—Ç 6.3x50mm",
        price: 5,
        category: "hardware",
        image: "images/hardware.jpg",
        description: "–î–ª—è —Å–±–æ—Ä–∫–∏ –º–µ–±–µ–ª–∏, 6.3x50mm, –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã–π. –í—ã—Å–æ–∫–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å."
    },
    {
        id: 14,
        name: "–£–≥–ª–æ–≤–∞—è —Å—Ç—è–∂–∫–∞ –º–µ–±–µ–ª—å–Ω–∞—è",
        price: 15,
        category: "hardware",
        image: "images/hardware.jpg",
        description: "–î–ª—è –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. –ù–∞–¥–µ–∂–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è."
    },
    {
        id: 15,
        name: "–®—É—Ä—É–ø –º–µ–±–µ–ª—å–Ω—ã–π 4x30mm",
        price: 3,
        category: "hardware",
        image: "images/hardware.jpg",
        description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à—É—Ä—É–ø –¥–ª—è –î–°–ü, 4x30mm. –ê–Ω—Ç–∏–∫–æ—Ä—Ä–æ–∑–∏–π–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ."
    },
    {
        id: 16,
        name: "–ú–µ–±–µ–ª—å–Ω—ã–π —É–≥–æ–ª–æ–∫ —É—Å–∏–ª–µ–Ω–Ω—ã–π",
        price: 25,
        category: "hardware",
        image: "images/hardware.jpg",
        description: "–£—Å–∏–ª–µ–Ω–Ω—ã–π —É–≥–æ–ª–æ–∫ –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–æ–ª–æ–∫. –ì—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å 50–∫–≥."
    }
];

// –ö–æ—Ä–∑–∏–Ω–∞
let cart = [];
let cartCount = 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initCart();
    setupEventListeners();
    setupMobileMenu();
    loadAllProducts();
    setupSearch();
    
    console.log('–°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω! –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
});

// –ö–æ—Ä–∑–∏–Ω–∞
function initCart() {
    const savedCart = localStorage.getItem('vegadar_cart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
        updateCartCount();
    }
}

function saveCart() {
    localStorage.setItem('vegadar_cart', JSON.stringify(cart));
}

function updateCartCount() {
    cartCount = cart.reduce((total, item) => total + item.quantity, 0);
    const cartCountElement = document.querySelector('.cart-count');
    if (cartCountElement) {
        cartCountElement.textContent = cartCount;
    }
}

function addToCart(productId, productName, productPrice) {
    const existingItem = cart.find(item => item.id === productId);
    
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            id: productId,
            name: productName,
            price: productPrice,
            quantity: 1
        });
    }
    
    saveCart();
    updateCartCount();
    showNotification(`‚úÖ "${productName}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
}

function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    saveCart();
    updateCartCount();
    updateCartModal();
}

function clearCart() {
    cart = [];
    saveCart();
    updateCartCount();
    updateCartModal();
    showNotification('üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞');
}

function updateQuantity(productId, change) {
    const item = cart.find(item => item.id === productId);
    if (item) {
        item.quantity += change;
        if (item.quantity <= 0) {
            removeFromCart(productId);
        } else {
            saveCart();
            updateCartModal();
        }
    }
}

function calculateTotal() {
    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã
function setupCartModal() {
    const modal = document.getElementById('cartModal');
    const cartButton = document.getElementById('cartButton');
    const closeButton = document.querySelector('.close');
    const continueShopping = document.getElementById('continueShopping');
    const checkoutButton = document.getElementById('checkout');
    const clearCartButton = document.getElementById('clearCart');

    if (cartButton) {
        cartButton.addEventListener('click', openCartModal);
    }

    if (closeButton) {
        closeButton.addEventListener('click', closeCartModal);
    }

    if (continueShopping) {
        continueShopping.addEventListener('click', closeCartModal);
    }

    if (checkoutButton) {
        checkoutButton.addEventListener('click', processCheckout);
    }

    if (clearCartButton) {
        clearCartButton.addEventListener('click', clearCart);
    }

    window.addEventListener('click', (event) => {
        if (event.target === modal) {
            closeCartModal();
        }
    });
}

function openCartModal() {
    const modal = document.getElementById('cartModal');
    updateCartModal();
    modal.style.display = 'block';
}

function closeCartModal() {
    const modal = document.getElementById('cartModal');
    modal.style.display = 'none';
}

function updateCartModal() {
    const cartItems = document.getElementById('cartItems');
    const cartTotal = document.getElementById('cartTotal');
    
    if (!cartItems || !cartTotal) return;
    
    if (cart.length === 0) {
        cartItems.innerHTML = '<p class="empty-cart">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
    } else {
        cartItems.innerHTML = cart.map(item => `
            <div class="cart-item">
                <div class="cart-item-info">
                    <div class="cart-item-name">${item.name}</div>
                    <div class="cart-item-price">${item.price} ‚ÇΩ √ó ${item.quantity}</div>
                </div>
                <div class="cart-item-quantity">
                    <button class="quantity-btn" onclick="updateQuantity(${item.id}, -1)">-</button>
                    <span>${item.quantity}</span>
                    <button class="quantity-btn" onclick="updateQuantity(${item.id}, 1)">+</button>
                </div>
                <button class="cart-item-remove" onclick="removeFromCart(${item.id})">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        `).join('');
    }
    
    cartTotal.textContent = calculateTotal();
}

function processCheckout() {
    if (cart.length === 0) {
        showNotification('‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
        return;
    }

    const orderItems = cart.map(item => 
        `‚Ä¢ ${item.name} - ${item.quantity}—à—Ç. √ó ${item.price}‚ÇΩ = ${item.quantity * item.price}‚ÇΩ`
    ).join('\n');

    const totalAmount = calculateTotal();
    const message = `üõí –ó–ê–ö–ê–ó –° –°–ê–ô–¢–ê VEGADAR.RU\n\n${orderItems}\n\nüí∞ –ò–¢–û–ì–û: ${totalAmount}‚ÇΩ\n\nüìû –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º.`;

    const phone = '+79624044323';
    const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(phone)}&text=${encodeURIComponent(message)}`;
    
    window.open(telegramUrl, '_blank');
    
    showNotification('‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –û—Ç–∫—Ä—ã–≤–∞—é Telegram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
    
    cart = [];
    saveCart();
    updateCartCount();
    closeCartModal();
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function showCategory(category) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    document.getElementById('products').style.display = 'none';
    document.getElementById('handles').style.display = 'none';
    document.getElementById('hinges').style.display = 'none';
    document.getElementById('systems').style.display = 'none';
    document.getElementById('hardware').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    document.getElementById(category).style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    document.getElementById(category).scrollIntoView({ behavior: 'smooth' });
}

function showCategories() {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    document.getElementById('handles').style.display = 'none';
    document.getElementById('hinges').style.display = 'none';
    document.getElementById('systems').style.display = 'none';
    document.getElementById('hardware').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å–µ–∫—Ü–∏—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    document.getElementById('products').style.display = 'block';
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    document.getElementById('products').scrollIntoView({ behavior: 'smooth' });
}

function scrollToSection(sectionId) {
    const element = document.getElementById(sectionId);
    if (element) {
        element.scrollIntoView({ behavior: 'smooth' });
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
function loadAllProducts() {
    const categories = ['handles', 'hinges', 'systems', 'hardware'];
    
    categories.forEach(category => {
        const productsGrid = document.getElementById(category + 'Products');
        const categoryProducts = productsData.filter(product => product.category === category);
        
        productsGrid.innerHTML = categoryProducts.map(product => `
            <div class="product-card">
                <div class="product-image">
                    <img src="${product.image}" alt="${product.name}" onerror="this.src='https://via.placeholder.com/400x200/32CD32/000000?text=–ú–µ–±–µ–ª—å–Ω–∞—è+–§—É—Ä–Ω–∏—Ç—É—Ä–∞'">
                    <div class="product-badge">${getCategoryName(product.category)}</div>
                </div>
                <div class="product-content">
                    <h3>${product.name}</h3>
                    <p>${product.description}</p>
                    <div class="product-price">${product.price} ‚ÇΩ</div>
                    <div class="product-actions">
                        <button class="btn btn-primary" onclick="addToCart(${product.id}, '${product.name.replace(/'/g, "\\'")}', ${product.price})">
                            <i class="fas fa-cart-plus"></i>
                            –í –∫–æ—Ä–∑–∏–Ω—É
                        </button>
                        <button class="btn btn-secondary" onclick="orderProduct(${product.id})">
                            <i class="fab fa-telegram"></i>
                            –ó–∞–∫–∞–∑–∞—Ç—å
                        </button>
                    </div>
                </div>
            </div>
        `).join('');
    });
}

function getCategoryName(category) {
    const names = {
        'handles': '–†—É—á–∫–∏',
        'hinges': '–ü–µ—Ç–ª–∏',
        'systems': '–°–∏—Å—Ç–µ–º—ã',
        'hardware': '–ö—Ä–µ–ø–µ–∂'
    };
    return names[category] || '–¢–æ–≤–∞—Ä';
}

// –ü–æ–∏—Å–∫ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
function setupSearch() {
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    
    if (!searchInput || !searchResults) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
        return;
    }
    
    searchInput.addEventListener('input', function() {
        const query = this.value.toLowerCase().trim();
        
        if (query.length < 2) {
            searchResults.style.display = 'none';
            return;
        }
        
        const results = productsData.filter(product => 
            product.name.toLowerCase().includes(query) || 
            product.description.toLowerCase().includes(query)
        );
        
        if (results.length > 0) {
            searchResults.innerHTML = results.map(product => `
                <div class="search-result-item" onclick="selectSearchResult('${product.category}', ${product.id})">
                    <div class="search-result-name">${product.name}</div>
                    <div class="search-result-price">${product.price} ‚ÇΩ</div>
                </div>
            `).join('');
            searchResults.style.display = 'block';
        } else {
            searchResults.innerHTML = '<div class="no-results">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
            searchResults.style.display = 'block';
        }
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–∏—Å–∫–∞
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
            searchResults.style.display = 'none';
        }
    });
}

function selectSearchResult(category, productId) {
    showCategory(category);
    document.getElementById('searchInput').value = '';
    document.getElementById('searchResults').style.display = 'none';
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    setTimeout(() => {
        document.getElementById(category).scrollIntoView({ behavior: 'smooth' });
    }, 100);
}

// –ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–∞
function orderProduct(productId) {
    const product = productsData.find(p => p.id === productId);
    if (product) {
        const message = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä: ${product.name} - ${product.price}‚ÇΩ`;
        openTelegramWithMessage(message);
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ Telegram
function openTelegram() {
    const message = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å –ø–æ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ—É—Ä–Ω–∏—Ç—É—Ä–µ.';
    openTelegramWithMessage(message);
}

function openTelegramWithMessage(message) {
    const phone = '+79624044323';
    const url = `https://t.me/share/url?url=${encodeURIComponent(phone)}&text=${encodeURIComponent(message)}`;
    window.open(url, '_blank');
}

// –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
function openAIAssistant() {
    showNotification('ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è');
    // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
}

// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
function setupMobileMenu() {
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const navMenu = document.getElementById('navMenu');

    if (mobileMenuBtn && navMenu) {
        mobileMenuBtn.addEventListener('click', function() {
            navMenu.classList.toggle('active');
        });
    }

    const navLinks = document.querySelectorAll('.nav-link');
    navLinks.forEach(link => {
        link.addEventListener('click', () => {
            navMenu.classList.remove('active');
        });
    });
}

// –£—Ç–∏–ª–∏—Ç—ã
function showNotification(message) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const existingNotification = document.querySelector('.notification');
    if (existingNotification) {
        existingNotification.remove();
    }

    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    document.body.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    setupCartModal();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
    const contactForm = document.getElementById('contactForm');
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const name = document.getElementById('contactName').value;
            const phone = document.getElementById('contactPhone').value;
            const message = document.getElementById('contactMessage').value;
            
            processContactForm(name, phone, message);
        });
    }
}

function processContactForm(name, phone, message) {
    const fullMessage = `üìß –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê VEGADAR.RU\n\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`;
    openTelegramWithMessage(fullMessage);
    
    document.getElementById('contactForm').reset();
    showNotification('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.');
}